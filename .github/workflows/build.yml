name: Build and Version

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

# Add permissions at the workflow level
permissions:
    contents: write
    issues: write
    pull-requests: write
    id-token: write

jobs:
    build-and-version:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, 'chore(release)')

        # Add permissions at the job level as well
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write

        steps:
            - uses: actions/checkout@v5
              with:
                  fetch-depth: 0
                  # Use a Personal Access Token instead of GITHUB_TOKEN for better permissions
                  token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-bun-

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun install --frozen-lockfile

            - name: Run tests
              run: bun test

            - name: Semantic Release
              uses: cycjimmy/semantic-release-action@v4
              with:
                  semantic_version: 24
                  extra_plugins: |
                      @semantic-release/changelog@6.0.3
                      @semantic-release/git@10.0.1
              env:
                  # Use PAT_TOKEN if available, otherwise fall back to GITHUB_TOKEN
                  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
                  # Explicitly set Git user for commits
                  GIT_AUTHOR_NAME: github-actions[bot]
                  GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
                  GIT_COMMITTER_NAME: github-actions[bot]
                  GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com

            - name: Build project (after version bump)
              run: bun run build

    test-only:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - uses: actions/checkout@v5
              with:
                  fetch-depth: 1

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-bun-

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun install --frozen-lockfile

            - name: Build project
              run: bun run build

            - name: Run tests
              run: bun run test

            - name: Upload results to Codecov
              uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
